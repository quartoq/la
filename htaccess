domain_name в domain_name.ru - доменное имя второго уровня

Настройка файлов .htaccess для каталогов сайта важна, поэтому если хостер не даёт доступа к таким файлам, то не будет возможности хоть как-то повлиять на веб-сервер apache, поэтому шлём нах такого хостера.

В данном случае здесь будет настроен корневой файл .htaccess, то есть файл .htaccess, расположенный в корне каталога, который задан как DocumentRoot, то есть в данном случае
src\public_html
Действие директив в .htaccess распрастраняется как на каталог, в котором этот файл находится, так и на подкаталоги этого каталога (их можно только переопределить соответствующими директивами в файле .htaccess внутри этих подкаталогов).
.htaccess в данном случае используется для следущих целей:
- задать файл index.php индексным файлом для всех директорий сайта
- указать apache отдавать все файлы в кодировке utf-8
- выключить просмотр содержимого каталога при обращении к отствующему файлу в нём
- задать ссылки, по которым можно обратиться к серверу с получением неошибочного ответа


Содержимое корневого файла .htaccess:
DirectoryIndex index.php
AddDefaultCharset utf-8
Options -Indexes
RewriteEngine On
RewriteBase /
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^admin/?$ index.php


DirectoryIndex index.php
Назначает индексный файл для директории (и соответственно вложенных в неё директориях по причине, указанной выше).
В данном случае индексным файлом назначен файл с именем index.php.
Необходимость этой директивы в файле .htaccess связана с тем, что хостеры обычно оставляют в качестве DirectoryIndex файл с именем index.html, что задано в конфигурационном файле, с которым запускается apache (можно, конечно, и в конфигурационном файле это изменить, но на хостинге следует ожидать именно такого случая, поэтому будем делать это в .htaccess).
Таким образом, в данном случае, пользователь заходя по ссылке
http://domain_name.ru
будет попадать в каталог
src\public_html
в котором будет искаться файл index.php, который если будет найден, то передастся на исполнение интерпретатору php, прикрученном к apache как модуль.
Для красоты сделаем так, чтобы пользователь не смог обратиться к файлу index.php по ссылке
http://domain_name.ru/index.php
а только по ссылке
http://domain_name.ru



AddDefaultCharset utf-8
Данная директива указывает, что текстовые файлы будут, по умолчанию отдаваться сервером в кодировке UTF-8.
По сути, это стандарт де-факто, так как давно уже никто из адекватных разработчиков в современном мире не юзает кодировку windows-1251 или какую-либо другую кодировку.



Options -Indexes
Данная директива выключает (для этого указывается минус у Indexes, типа выключили этим минусом действие Indexes) доступ к содержимому каталога, в случае когда к нему обратились по прямой ссылке и в нём нет индексного файла (иначе пользователю будет показано содержимое каталога, что не очень хорошо и возможно даже небезопасно).
Если пользователь обратится к реально существующему каталогу на сайте, то ему вернётся сообщение типа
Forbidden
You don't have permission to access /admin/ on this server.

Если же данная директива не задана и существует каталог test, в котором нет файлов index.php и index.html (index.html - это индексный файл для любых каталогов, заданный в конфигурационном файле apache), то обращение по ссылке
http://domain_name.ru/test/index.php
отобразит содержимое данное каталога, что нам не нужно.
Для удобства разработки, можно временно закомментировать данную директиву, но только не забыть, что для production-версии её надо снова раскомментировать.
Второй вариант - сделать так, чтобы сборщик в production-версию помещал только .htaccess с раскомментированной этой строкой.



Директивы модуля mod_rewrite
Данные директивы обеспечат безопасность, нужные доступы при обращении по ссылкам, ЧПУ (человеко понятные урлы (URL)) и т.п.

RewriteEngine On
RewriteBase /
RewriteCond %{REQUEST_FILENAME} !-f
RewriteRule ^admin/?$ index.php

RewriteEngine On
Включает использование модуля mod_rewrite в данном файле .haccess, иначе относящиеся к этому модулю директивы не будут выполняться в этом файле.

RewriteBase /
Задаёт прямой слеш / в качестве приписки к куску исходного url (после его изменений директивами RewriteRule), который был передан для обработки директивами mod_rewrite в данном файле .htaccess.
С точки зрения сервера, если первым символом url идёт прямой слеш /, то это означает обращение к корню сайта, то есть в нашем случае это обращение к каталогу public_html по ссылке http://domain_name.ru.
Напомним, что на вход директивам из модуля mod_rewrite в файле .htaccess передаётся кусок url, который получается путём вычета из исходного url, по которому был запрошен ресурс (предполагается, что он запрошен как некий файл), пути до местоположения самого файла .htaccess, которому этот кусок передаётся.
Например, если исходный url представляет собой строку http://domain_name.ru/test/test.php, а файл .htaccess лежит в корне сайта, то есть в каталоге public_html, который доступен по ссылке http://domain_name.ru, то таким куском url будет test/test.php, именно к этому куску с учётом изменений его правилами RewriteRule и припишется значение /, указанное в RewriteBase (то есть в данном случае, если не было изменений, получится /test/test.php).

RewriteCond %{REQUEST_FILENAME} !-f
Запрещает выполнять правила RewriteCond для реально существующих путей, которыми запрашиваются ресурсы (предполагается, что это файлы) по url.
Директива RewriteCond ставит условие при помощи опции !-f, которая обозначает несуществование файла (-f обозначает существование, а ! приписывается как отрицание этого существования).
Итоговое условие, задаваемое данной директивой означает следующее: выполняй последующие после меня директивы (модуля mod_rewrite), если не существует файл по url, который хранится в виде строки в серверной переменной REQUEST_FILENAME (а в ней хранится путь до файла, который пользователь запросил путём ввода в адресной строке своего браузера некоторого url, предполагается, что пользователь всегда пытается таким образом запросить некий файл, а не что либо иное).
????но здесь надо подумать, в принципе, для красоты наверное поставим дополнительные условия, так как хочется, чтобы пользователь получал доступ только по красивым ссылкам, например, по http://localhost/login вместо http://localhost/login.php.

RewriteRule ^admin/?$ index.php
Данная директива отрабатывает только после выполнения условия в RewriteCond и преследует цель запустить наш главный файл сайта index.php при обращении к админке по адресу
http://domain_name.ru/admin
как будто бы это было сделано по прямой ссылке 
http://domain_name.ru/index.php.
Напомним, что
^ - начало входных данных, а $ - конец входных данных, они нужны, чтобы чётко задать позицию в url, иначе потенциально можно сделать бесконечный цикл, что заставит упасть сервер.
? - необязательность предшествующего (порядок важен!) символа или их группы
В данном случае /? обозначает, что символ / может как присутствовать после слова admin, так и отсутствовать, это необходимо сделать, так как браузеры могут самостоятельно добавлять прямой слеш / к адресу.
подробнее см. в описании RewriteRule


Если модуль mod_rewrite будет отключен у хостера (в последних версиях apache она как раз по умолчанию отключена, но обычно адекватные хостеры сразу же её включают), то посылаем нах этого хостера.
Но если уж совсем всё плохо и от такого хостинга не отказаться, то как вариант решения просто оцениваем приписку admin в url и добавляем кнопку открытия формы авторизации.



FileETag MTime Size
включает отсыл eTag, что поможет не заботиться об использовании других методов обновления файлов в кеше браузера
По умолчанию, в apache 2.4 это и так включено, поэтому эту строку можно и не добавлять, но нужно проверить, работают ли etag на хостинге.
